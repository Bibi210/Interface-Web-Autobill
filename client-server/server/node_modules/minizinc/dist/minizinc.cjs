"use strict";let t={workerURL:new URL("./minizinc-worker.js",document.currentScript.src),numWorkers:2};const e=[];let n;function s(){if(!n){const e=`importScripts(${JSON.stringify(t.workerURL)});`;n=URL.createObjectURL(new Blob([e],{type:"text/javascript"}))}const s=new Worker(n);s.postMessage({wasmURL:t.wasmURL?t.wasmURL.toString():new URL("./minizinc.wasm",t.workerURL).toString(),dataURL:t.dataURL?t.dataURL.toString():new URL("./minizinc.data",t.workerURL).toString()}),e.push({worker:s,runCount:0})}function o(){for(;e.length<t.numWorkers;)s()}class r{constructor(){this.vfs={},this._toRun=[],this.unnamedCount=0}clone(){const t=new r;return t.vfs={...this.vfs},t._toRun=[...this.toRun],t.unnamedCount=this.unnamedCount,t}addString(t){let e=`_mzn_${this.unnamedCount++}.mzn`;for(;e in this.vfs;)e=`_mzn_${this.unnamedCount++}.mzn`;return this.addFile(e,t),e}addDznString(t){let e=`_dzn_${this.unnamedCount++}.dzn`;for(;e in this.vfs;)e=`_dzn_${this.unnamedCount++}.dzn`;return this.addFile(e,t),e}addJson(t){let e=`_json_${this.unnamedCount++}.json`;for(;e in this.vfs;)e=`_json_${this.unnamedCount++}.json`;return this.addFile(e,JSON.stringify(t)),e}addFile(t,e,n=!0){if("string"!=typeof e){if(t in this.vfs)return void this._addToRun(t,n);throw new Error("Missing file contents argument")}this.vfs[t]=e,this._addToRun(t,n)}_addToRun(t,e){e&&(t.endsWith(".mzn")||t.endsWith(".mzc")||t.endsWith(".dzn")||t.endsWith(".json")||t.endsWith(".mpc")||t.endsWith(".fzn"))&&-1===this._toRun.indexOf(t)&&this._toRun.push(t)}_run(t,n,s=null){o();const r=[];let i=this.vfs;if(n){let t=`_mzn_${this.unnamedCount++}.mpc`;for(;t in this.vfs;)t=`_mzn_${this.unnamedCount++}.mpc`;i={...this.vfs,[t]:JSON.stringify(n)},r.push(t)}let{worker:a,runCount:u}=e.pop();return a.postMessage({jsonStream:!0,files:i,args:[...r,...t,...this._toRun],outputFiles:s}),{worker:a,runCount:u+1}}check(t){return new Promise(((n,o)=>{const r={...t},{worker:i,runCount:a}=this._run(["--model-check-only"],r.options),u=[];i.onmessage=t=>{switch(t.data.type){case"error":u.push(t.data);break;case"exit":a<10?e.push({worker:i,runCount:a}):(i.terminate(),s()),n(u)}}}))}interface(t){return new Promise(((n,o)=>{const r={...t},{worker:i,runCount:a}=this._run(["-c","--model-interface-only"],r.options),u=[];let d=null;i.onmessage=t=>{switch(t.data.type){case"error":u.push(t.data);break;case"interface":d=t.data;break;case"exit":a<10?e.push({worker:i,runCount:a}):(i.terminate(),s()),0===t.data.code?n(d):o(u)}}}))}compile(t){const e={...t};let n=0,o=`_fzn_${n++}.fzn`;for(;o in this.vfs;)o=`_fzn_${n++}.fzn`;const r=["-c","--fzn",o],{worker:i}=this._run(r,e.options,[o]);s();let a={},u=!1,d=null;return i.onmessage=t=>{if(a[t.data.type])for(const e of a[t.data.type])e(t.data);switch(t.data.type){case"exit":i.terminate(),u=!0,a={};break;case"error":d||(d=t.data)}},{isRunning:()=>!u,cancel(){if(!u){if(u=!0,i.terminate(),a.exit)for(const t of a.exit)t({type:"exit",code:null});a={}}},on(t,e){a[t]?a[t].add(e):a[t]=new Set([e])},off(t,e){a[t]&&a[t].delete(e)},then(t,e){const n=n=>{if(0===n.code)t(n.outputFiles[o]);else{if(!e)throw n;e({...n,error:d})}};a.exit?a.exit.add(n):a.exit=new Set([n])}}}solve(t){const e={jsonOutput:!0,...t},n=["-i"];e.jsonOutput&&(n.push("--output-mode"),n.push("json"));const{worker:o}=this._run(n,e.options);s();let r=null,i={},a=!1,u=null,d={},c="UNKNOWN";return o.onmessage=t=>{if(i[t.data.type])for(const e of i[t.data.type])e(t.data);switch(t.data.type){case"exit":o.terminate(),a=!0,i={};break;case"error":r||(r=t.data);break;case"statistics":d={...d,...t.data.statistics};break;case"solution":u=t.data,c="SATISFIED";break;case"status":c=t.data.status}},{isRunning:()=>!a,cancel(){if(!a){if(a=!0,o.terminate(),i.exit)for(const t of i.exit)t({type:"exit",code:null});i={}}},on(t,e){i[t]?i[t].add(e):i[t]=new Set([e])},off(t,e){i[t]&&i[t].delete(e)},then(t,e){const n=n=>{if(0===n.code)t({status:c,solution:u,statistics:d});else{if(!e)throw n;e({...n,error:r})}};i.exit?i.exit.add(n):i.exit=new Set([n])}}}}exports.Model=r,exports.init=async function(n){if(n&&(t={...t,...n}),e.length>0)throw new Error("MiniZinc.init() called after library already used/initialised");o(),await Promise.race(e.map((t=>new Promise((e=>{t.worker.addEventListener("message",(t=>{"ready"===t.data.type&&e()}),{once:!0})})))))},exports.shutdown=function(){for(const t of e)t.worker.terminate();e.splice(0),URL.revokeObjectURL(n),n=null},exports.solvers=function(){return new Promise(((t,n)=>{o();let{worker:r,runCount:i}=e.pop();r.postMessage({jsonStream:!1,args:["--solvers-json"]}),r.onmessage=o=>{"exit"===o.data.type&&(i<10?e.push({worker:r,runCount:i+1}):(r.terminate(),s()),0===o.data.code?t(JSON.parse(o.data.stdout)):n(o.data))}}))},exports.version=function(){return new Promise(((t,n)=>{o();let{worker:r,runCount:i}=e.pop();r.postMessage({jsonStream:!1,args:["--version"]}),r.onmessage=o=>{"exit"===o.data.type&&(i<10?e.push({worker:r,runCount:i+1}):(r.terminate(),s()),0===o.data.code?t(o.data.stdout):n(o.data))}}))};
