import n from"node:child_process";import t from"node:events";import i from"node:readline";import e from"node:fs/promises";import o from"node:path";import s from"node:os";let r={minizinc:"minizinc",_executable:"minizinc"};async function u(n){if(n&&(r={...r,...n}),!/\\\//.test(r.minizinc)&&r.minizincPaths)for(const n of minizincPaths){const t=o.join(n,r.minizinc);try{await e.access(t),r._executable=t}catch{}}r._executable=r.minizinc}const a=new Set;function c(){for(const n of a)n.kill("SIGKILL");a.clear()}class l{constructor(){this.vfs={},this._toRun=[],this.unnamedCount=0}clone(){const n=new l;return n.vfs={...this.vfs},n._toRun=[...this.toRun],n.unnamedCount=this.unnamedCount,n}addString(n){let t=`_mzn_${this.unnamedCount++}.mzn`;for(;t in this.vfs;)t=`_mzn_${this.unnamedCount++}.mzn`;return this._addVirtual(t,n),t}addDznString(n){let t=`_dzn_${this.unnamedCount++}.dzn`;for(;t in this.vfs;)t=`_dzn_${this.unnamedCount++}.dzn`;return this._addVirtual(t,n),t}addJson(n){let t=`_json_${this.unnamedCount++}.json`;for(;t in this.vfs;)t=`_json_${this.unnamedCount++}.json`;return this._addVirtual(t,JSON.stringify(n)),t}_add_toRun(n,t){t&&(n.endsWith(".mzn")||n.endsWith(".mzc")||n.endsWith(".dzn")||n.endsWith(".json")||n.endsWith(".mpc")||n.endsWith(".fzn"))&&-1===this._toRun.indexOf(n)&&this._toRun.push(n)}_addVirtual(n,t,i=!0){this.vfs[n]=t,this._add_toRun(n,i)}addFile(n,t=null,i=!0){"string"==typeof t?this._addVirtual(n,t,i):this._add_toRun(n.use)}_run(u,c,l){const d=new t;let f=null;return d.on("sigint",(()=>{f?f.kill("SIGINT"):f=!1})),(async()=>{const t=["--json-stream"],m=await e.mkdtemp(o.join(s.tmpdir(),"mzn"));if(c){let n=`_mzn_${this.unnamedCount++}.mpc`;for(;n in this.vfs;)n=`_mzn_${this.unnamedCount++}.mpc`;n=o.join(m,n),await e.writeFile(n,JSON.stringify(c)),t.push(n)}for(const n in this.vfs)await e.writeFile(o.join(m,n),this.vfs[n]);if(!1===f)return void d.emit("exit",{code:0});f=n.spawn(r._executable,[...t,...u.map((n=>l&&-1!==l.indexOf(n)?o.join(m,n):n)),...this._toRun.map((n=>n in this.vfs?o.join(m,n):n))]),a.add(f);i.createInterface(f.stdout).on("line",(async n=>{try{const t=JSON.parse(n);if("location"in t&&"filename"in t.location&&0===t.location.filename.indexOf(m)&&(t.location.filename=t.location.filename.substring(m.length)),"stack"in t&&Array.isArray(t.stack))for(const n of t.stack)"location"in n&&"filename"in n.location&&0===n.location.filename.indexOf(m)&&(n.location.filename=n.location.filename.substring(m.length));d.emit(t.type,t)}catch(t){d.emit("stdout",{type:"stdout",value:n})}}));i.createInterface(f.stderr).on("line",(async n=>{d.emit("stderr",n)})),f.on("exit",(async(n,t)=>{a.delete(f);const i={type:"exit",code:"SIGINT"===t?null:n};if(l){i.outputFiles={};for(const n of l)try{i.outputFiles[n]=await e.readFile(n,{encoding:"utf8"})}catch(t){try{i.outputFiles[n]=await e.readFile(o.join(m,n),{encoding:"utf8"})}catch(t){i.outputFiles[n]=null}}}d.emit("exit",i),e.rm(m,{recursive:!0,force:!0})}))})(),d}check(n){const t={...n},i=this._run(["--model-check-only"],t.options),e=[];return i.on("error",(n=>e.push(n))),new Promise(((n,t)=>{i.on("exit",(t=>n(e)))}))}interface(n){const t={...n},i=this._run(["-c","--model-interface-only"],t.options),e=[];let o=null;return i.on("error",(n=>e.push(n))),i.on("interface",(n=>o=n)),new Promise(((n,t)=>{i.on("exit",(i=>{0===i.code?n(o):t(e)}))}))}compile(n){const t={...n};let i=0,e=`_fzn_${i++}.fzn`;for(;e in this.vfs;)e=`_fzn_${i++}.fzn`;const o=["-c","--fzn",e];let s=!0,r=null;const u=this._run(o,t.options,[e]);return u.on("exit",(()=>s=!1)),u.on("error",(n=>{r||(r=n)})),{isRunning:()=>s,cancel(){u.emit("sigint")},on:(n,t)=>u.on(n,t),off:(n,t)=>u.off(n,t),then(n,t){u.on("exit",(i=>{if(0===i.code)n(i.outputFiles[e]);else{if(!t)throw i;t({...i,error:r})}}))}}}solve(n){const t={jsonOutput:!0,...n},i=["-i"];t.jsonOutput&&(i.push("--output-mode"),i.push("json"));let e=!0,o=null;const s=this._run(i,t.options);s.on("exit",(()=>e=!1));let r=null,u={},a="UNKNOWN";return s.on("statistics",(n=>{u={...u,...n.statistics}})),s.on("solution",(n=>{r=n,a="SATISFIED"})),s.on("status",(n=>{a=n.status})),s.on("error",(n=>{o||(o=n)})),{isRunning:()=>e,cancel(){s.emit("sigint")},on:(n,t)=>s.on(n,t),off:(n,t)=>s.off(n,t),then(n,t){s.on("exit",(i=>{if(0===i.code)n({status:a,solution:r,statistics:u});else{if(!t)throw i;t({...i,error:o})}}))}}}}function d(){return new Promise(((t,i)=>{let e=null;e=n.execFile(r._executable,["--version"],((n,o,s)=>{a.delete(e),n&&i(n),t(o)})),a.add(e)}))}function f(){return new Promise(((t,i)=>{let e=null;e=n.execFile(r._executable,["--solvers-json"],((n,o,s)=>{a.delete(e),n&&i(n),t(JSON.parse(o))})),a.add(e)}))}export{l as Model,u as init,c as shutdown,f as solvers,d as version};
