
** Conflict (shift/reduce) in state 31.
** Token involved: LClosePar
** This state is reached from prog after reading:

LOpenPar var_parse

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
expr EOF 
(?)

** In state 31, looking ahead at LClosePar, reducing production
** expr -> var_parse
** is permitted because of the following sub-derivation:

LOpenPar expr LClosePar // lookahead token appears
         var_parse . 

** In state 31, looking ahead at LClosePar, shifting is permitted
** because of the following sub-derivation:

var_parse 
LOpenPar var_parse . LClosePar 
